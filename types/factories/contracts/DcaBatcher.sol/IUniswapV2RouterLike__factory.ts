/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV2RouterLike,
  IUniswapV2RouterLikeInterface,
} from "../../../contracts/DcaBatcher.sol/IUniswapV2RouterLike";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUniswapV2RouterLike__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV2RouterLikeInterface {
    return new Interface(_abi) as IUniswapV2RouterLikeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV2RouterLike {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IUniswapV2RouterLike;
  }
}
