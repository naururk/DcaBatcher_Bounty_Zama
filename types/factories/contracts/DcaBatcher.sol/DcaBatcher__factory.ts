/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DcaBatcher,
  DcaBatcherInterface,
} from "../../../contracts/DcaBatcher.sol/DcaBatcher";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "totalHandle",
        type: "bytes32",
      },
    ],
    name: "BatchStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "totalAmount",
        type: "uint64",
      },
    ],
    name: "BatchTotalDecrypted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "BatchTotalDecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Distributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "IntentSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountInUSDC",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pseudoEthOut",
        type: "uint256",
      },
    ],
    name: "SwapSimulated",
    type: "event",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "batches",
    outputs: [
      {
        internalType: "bytes32",
        name: "totalHandle",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "requested",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ethBalanceEnc",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "totalPlainUSDC",
        type: "uint64",
      },
    ],
    name: "finalizeBatchWithTotal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBatchInfo",
    outputs: [
      {
        internalType: "bytes32",
        name: "totalHandle",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "requested",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddr",
        type: "address",
      },
    ],
    name: "getEthBalanceHandle",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "intents",
    outputs: [
      {
        internalType: "euint64",
        name: "amountPerTick",
        type: "bytes32",
      },
      {
        internalType: "euint64",
        name: "remainingBudget",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "intervalSec",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "nextRunTs",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBatchId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingContrib",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2RouterLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setSimulateSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simulateSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "amountPerTickExtRaw",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "budgetExtRaw",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "intervalSec",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "startTs",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitIntent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "n",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "participants",
        type: "address[]",
      },
    ],
    name: "triggerBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801562000010575f80fd5b50604051620021c3380380620021c383398101604081905262000033916200024b565b620001af620000d3604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c288121790555f80546001600160a01b031990811633179091556001600160a01b0393841660805291831660a0526001805491909316911617905562000292565b80516001600160a01b038116811462000246575f80fd5b919050565b5f805f606084860312156200025e575f80fd5b62000269846200022f565b925062000279602085016200022f565b915062000289604085016200022f565b90509250925092565b60805160a051611f08620002bb5f395f6102d901525f81816102750152610c770152611f085ff3fe608060405234801561000f575f80fd5b5060043610610149575f3560e01c8063a5767819116100c7578063da2c09e51161007d578063f688bcfb11610063578063f688bcfb146103be578063f887ea40146103d1578063ffbbc29d146103e4575f80fd5b8063da2c09e514610387578063f2fde38b146103ab575f80fd5b8063b32c4d8d116100ad578063b32c4d8d146102fb578063c0d786551461034a578063cf482cad1461035d575f80fd5b8063a5767819146102c1578063ad5c4648146102d4575f80fd5b8063657504951161011c5780638418198111610102578063841819811461025157806389a30271146102705780638da5cb5b146102af575f80fd5b8063657504951461022b5780637a083ec21461023e575f80fd5b806302dd1b7c1461014d5780631a0058f514610162578063457905721461018e5780635b5eee8814610214575b5f80fd5b61016061015b366004611afe565b6103f7565b005b610175610170366004611b9c565b61062c565b6040516101859493929190611bb3565b60405180910390f35b6101dd61019c366004611c2f565b600260208190525f918252604090912080546001820154919092015467ffffffffffffffff80821691600160401b810490911690600160801b900460ff1685565b60408051958652602086019490945267ffffffffffffffff928316938501939093521660608301521515608082015260a001610185565b61021d60055481565b604051908152602001610185565b61021d610239366004611c48565b6106c0565b61021d61024c366004611c2f565b610aad565b61021d61025f366004611c2f565b60036020525f908152604090205481565b6102977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610185565b5f54610297906001600160a01b031681565b6101606102cf366004611cc7565b610af2565b6102977f000000000000000000000000000000000000000000000000000000000000000081565b61032d610309366004611b9c565b60066020525f90815260409020805460029091015460ff8082169161010090041683565b604080519384529115156020840152151590820152606001610185565b610160610358366004611c2f565b610b55565b61021d61036b366004611ce2565b600760209081525f928352604080842090915290825290205481565b60015461039b90600160a01b900460ff1681565b6040519015158152602001610185565b6101606103b9366004611c2f565b610bae565b6101606103cc366004611b9c565b610c06565b600154610297906001600160a01b031681565b6101606103f2366004611d0c565b610d6d565b806104495760405162461bcd60e51b815260206004820152600b60248201527f456d7074792070726f6f6600000000000000000000000000000000000000000060448201526064015b60405180910390fd5b604080516020601f8401819004810282018101909252828152879187915f9161048d91859188908890819084018382808284375f92019190915250610efd92505050565b90505f6104cf8387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610efd92505050565b90506104da82610f11565b506104e481610f11565b506104ef8233610f20565b506104fa8133610f20565b506040805160a081018252838152602080820184815267ffffffffffffffff808d168486019081528c821660608601908152600160808701818152335f90815260028089528a822099518a559651928901929092559251969094018054915192511515600160801b0270ff0000000000000000000000000000000019938516600160401b026fffffffffffffffffffffffffffffffff19909316979094169690961717161790925560049052205460ff166105f6575f6105b95f610f32565b90506105c481610f11565b506105cf8133610f20565b50335f908152600360209081526040808320939093556004905220805460ff191660011790555b60405133907f41d70fc0d12a48eae8924589287c773f3bddea7109c443c255d3e6079fc2ce1c905f90a250505050505050505050565b5f8181526006602090815260408083208054600282015460018301805485518188028101880190965280865260609688968796959460ff8082169461010090920416928591908301828280156106a957602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161068b575b505050505092509450945094509450509193509193565b5f806106cb5f610f32565b90505f8367ffffffffffffffff8111156106e7576106e7611d2d565b604051908082528060200260200182016040528015610710578160200160208202803683370190505b5090505f60055f815461072290611d55565b918290555093505f5b858110156108f0575f87878381811061074657610746611d6d565b905060200201602081019061075b9190611c2f565b6001600160a01b0381165f9081526002602081905260409091209081015491925090600160801b900460ff166107925750506108e8565b6002810154600160401b900467ffffffffffffffff164210156107b65750506108e8565b5f6107e16107cb8360010154845f0154610f48565b6107dc8460010154855f0154610f76565b610fa4565b90505f6107f6828460010154855f0154610fd2565b9050610806836001015482610fe6565b6001840181905561081690610f11565b5061082081610f11565b5061082b8185610f20565b506108368882611014565b600284015490985061085c9067ffffffffffffffff80821691600160401b900416611d81565b60028401805467ffffffffffffffff92909216600160401b026fffffffffffffffff00000000000000001990921691909117905583878761089c81611d55565b9850815181106108ae576108ae611d6d565b6001600160a01b039283166020918202929092018101919091525f8b81526007825260408082209790931681529590529093209290925550505b60010161072b565b505f81116109405760405162461bcd60e51b815260206004820152600e60248201527f6e6f2064756520696e74656e74730000000000000000000000000000000000006044820152606401610440565b5f8167ffffffffffffffff81111561095a5761095a611d2d565b604051908082528060200260200182016040528015610983578160200160208202803683370190505b5090505f5b828110156109dc578381815181106109a2576109a2611d6d565b60200260200101518282815181106109bc576109bc611d6d565b6001600160a01b0390921660209283029190910190910152600101610988565b506109e684611042565b506040805160808101825285815260208082018481525f8385018190526060840181905289815260068352939093208251815592518051889492610a31926001850192910190611a67565b50604082810151600292909201805460609094015161ffff1990941692151561ff001916929092176101009315159390930292909217905580518481526020810183905287917ff960acf2e31b63ef3ad860496142cb7addc8e56b3ba515808af77c949eb7f611910160405180910390a2505050505092915050565b6001600160a01b0381165f9081526004602052604081205460ff16610ad357505f919050565b6001600160a01b0382165f908152600360205260409020545b92915050565b5f546001600160a01b03163314610b1c576040516330cd747160e01b815260040160405180910390fd5b60018054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b5f546001600160a01b03163314610b7f576040516330cd747160e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f546001600160a01b03163314610bd8576040516330cd747160e01b815260040160405180910390fd5b5f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f8111610c555760405162461bcd60e51b815260206004820152600860248201527f616d6f756e743d300000000000000000000000000000000000000000000000006044820152606401610440565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610cc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce99190611da9565b610d355760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c6564000000000000000000000000006044820152606401610440565b60405181815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a250565b5f546001600160a01b03163314610d97576040516330cd747160e01b815260040160405180910390fd5b5f8281526006602052604090206002810154610100900460ff1615610dfe5760405162461bcd60e51b815260206004820152601160248201527f616c726561647920636f6d706c657465640000000000000000000000000000006044820152606401610440565b8054610e4c5760405162461bcd60e51b815260206004820152600960248201527f62616420626174636800000000000000000000000000000000000000000000006044820152606401610440565b5f8267ffffffffffffffff1611610ea55760405162461bcd60e51b815260206004820152600a60248201527f7a65726f20746f74616c000000000000000000000000000000000000000000006044820152606401610440565b60405167ffffffffffffffff8316815283907f830e43f24fbe53aa25584bcec53aa83aea63b9558e3c803fb5a5bcc27e2c0eab9060200160405180910390a2610ef8838367ffffffffffffffff1661104c565b505050565b5f610f0a838360056110cf565b9392505050565b5f610f1c82306111c9565b5090565b5f610f2b83836111c9565b5090919050565b5f610aec8267ffffffffffffffff16600561123d565b5f82610f5a57610f575f610f32565b92505b81610f6b57610f685f610f32565b91505b610f0a83835f6112cc565b5f82610f8857610f855f610f32565b92505b81610f9957610f965f610f32565b91505b610f0a83835f611389565b5f82610fb657610fb35f611400565b92505b81610fc757610fc45f611400565b91505b610f0a83835f61141b565b5f610fde848484611492565b949350505050565b5f82610ff857610ff55f610f32565b92505b81611009576110065f610f32565b91505b610f0a83835f611533565b5f82611026576110235f610f32565b92505b81611037576110345f610f32565b91505b610f0a83835f6115aa565b5f610f1c82611621565b6040805182815260208101839052829184917fcd9929c9cb8410ccb517c505fb97463cbf1198a7fdfac8222d550b923c9adcf2910160405180910390a2604080518381526020810183905284917f4d3257edb95914b701655f9bf4b58e4b422017a7b94dad03a20dae00f4b1cbb7910160405180910390a2610ef883828461169f565b5f80516020611edc8339815191525460405163196d0b9b60e01b81525f915f80516020611ebc833981519152916001600160a01b039091169063196d0b9b90611122908890339089908990600401611de4565b6020604051808303815f875af115801561113e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111629190611e4d565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156111ab575f80fd5b505af11580156111bd573d5f803e3d5ffd5b50505050509392505050565b5f80516020611ebc8339815191528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015611222575f80fd5b505af1158015611234573d5f803e3d5ffd5b50505050505050565b5f80516020611edc83398151915254604051639cd07acb60e01b81525f915f80516020611ebc833981519152916001600160a01b0390911690639cd07acb9061128c9087908790600401611e64565b6020604051808303815f875af11580156112a8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fde9190611e4d565b5f8082156112df5750600160f81b6112e2565b505f5b5f80516020611edc83398151915254604051637210768160e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b0316906372107681906064015b6020604051808303815f875af115801561135b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137f9190611e4d565b9695505050505050565b5f80821561139c5750600160f81b61139f565b505f5b5f80516020611edc8339815191525460405163f77f3f1d60e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b03169063f77f3f1d9060640161133f565b5f610aec8261140f575f611412565b60015b60ff165f61123d565b5f80821561142e5750600160f81b611431565b505f5b5f80516020611edc833981519152546040516363a2db2960e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b0316906363a2db299060640161133f565b5f80516020611edc83398151915254604051637702dcff60e01b81526004810185905260248101849052604481018390525f915f80516020611ebc833981519152916001600160a01b0390911690637702dcff906064015b6020604051808303815f875af1158015611506573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061152a9190611e4d565b95945050505050565b5f8082156115465750600160f81b611549565b505f5b5f80516020611edc833981519152546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b03169063182b6d989060640161133f565b5f8082156115bd5750600160f81b6115c0565b505f5b5f80516020611edc8339815191525460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b03169063117b2f389060640161133f565b6040805160018082528183019092525f80516020611ebc833981519152915f91906020808301908036833701905050905082815f8151811061166557611665611d6d565b60209081029190910101528154604051637d6e912360e11b81526001600160a01b039091169063fadd22469061120b908490600401611e78565b5f8381526006602052604090206001810154806116fe5760405162461bcd60e51b815260206004820152600860248201527f6e6f2075736572730000000000000000000000000000000000000000000000006044820152606401610440565b67ffffffffffffffff8311156117565760405162461bcd60e51b815260206004820152600d60248201527f746f74616c20746f6f20626967000000000000000000000000000000000000006044820152606401610440565b67ffffffffffffffff8411156117ae5760405162461bcd60e51b815260206004820152600b60248201527f6f757420746f6f206269670000000000000000000000000000000000000000006044820152606401610440565b5f6117b885610f32565b90505f5b828110156118f7575f8460010182815481106117da576117da611d6d565b5f9182526020808320909101548a83526007825260408084206001600160a01b03909216808552919092529082205490925090611817828661193b565b90505f611824828a611969565b6001600160a01b0385165f9081526004602052604090205490915060ff16611896575f6118505f610f32565b905061185b81610f11565b506118668186610f20565b506001600160a01b0385165f908152600360209081526040808320939093556004905220805460ff191660011790555b6001600160a01b0384165f908152600360205260408120546118b89083611014565b90506118c381610f11565b506118ce8186610f20565b506001600160a01b03949094165f908152600360205260409020939093555050506001016117bc565b5060028301805461ff00191661010017905560405186907fddc9c30275a04c48091f24199f9c405765de34d979d6847f5b9798a57232d2e5905f90a2505050505050565b5f8261194d5761194a5f610f32565b92505b8161195e5761195b5f610f32565b91505b610f0a83835f61198f565b5f8261197b576119785f610f32565b92505b610f0a8367ffffffffffffffff8416611a06565b5f8082156119a25750600160f81b6119a5565b505f5b5f80516020611edc83398151915254604051630afe14ad60e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611ebc833981519152916001600160a01b0316906357f0a5689060640161133f565b5f80516020611edc83398151915254604051635a53accb60e01b81526004810184905260248101839052600160f81b604482018190525f9290915f80516020611ebc833981519152916001600160a01b031690635a53accb906064016114ea565b828054828255905f5260205f20908101928215611ac7579160200282015b82811115611ac7578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178255602090920191600190910190611a85565b50610f1c9291505b80821115610f1c575f8155600101611acf565b803567ffffffffffffffff81168114611af9575f80fd5b919050565b5f805f805f8060a08789031215611b13575f80fd5b8635955060208701359450611b2a60408801611ae2565b9350611b3860608801611ae2565b9250608087013567ffffffffffffffff80821115611b54575f80fd5b818901915089601f830112611b67575f80fd5b813581811115611b75575f80fd5b8a6020828501011115611b86575f80fd5b6020830194508093505050509295509295509295565b5f60208284031215611bac575f80fd5b5035919050565b5f6080820186835260206080602085015281875180845260a0860191506020890193505f5b81811015611bfd5784516001600160a01b031683529383019391830191600101611bd8565b5050951515604085015250505090151560609091015292915050565b80356001600160a01b0381168114611af9575f80fd5b5f60208284031215611c3f575f80fd5b610f0a82611c19565b5f8060208385031215611c59575f80fd5b823567ffffffffffffffff80821115611c70575f80fd5b818501915085601f830112611c83575f80fd5b813581811115611c91575f80fd5b8660208260051b8501011115611ca5575f80fd5b60209290920196919550909350505050565b8015158114611cc4575f80fd5b50565b5f60208284031215611cd7575f80fd5b8135610f0a81611cb7565b5f8060408385031215611cf3575f80fd5b82359150611d0360208401611c19565b90509250929050565b5f8060408385031215611d1d575f80fd5b82359150611d0360208401611ae2565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201611d6657611d66611d41565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b67ffffffffffffffff818116838216019080821115611da257611da2611d41565b5092915050565b5f60208284031215611db9575f80fd5b8151610f0a81611cb7565b60548110611de057634e487b7160e01b5f52602160045260245ffd5b9052565b8481525f60206001600160a01b03861660208401526080604084015284518060808501525f5b81811015611e265786810183015185820160a001528201611e0a565b505f60a0828601015260a0601f19601f8301168501019250505061152a6060830184611dc4565b5f60208284031215611e5d575f80fd5b5051919050565b82815260408101610f0a6020830184611dc4565b602080825282518282018190525f9190848201906040850190845b81811015611eaf57835183529284019291840191600101611e93565b5090969550505050505056feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601a164736f6c6343000818000a";

type DcaBatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DcaBatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DcaBatcher__factory extends ContractFactory {
  constructor(...args: DcaBatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdc: AddressLike,
    _weth: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdc, _weth, _router, overrides || {});
  }
  override deploy(
    _usdc: AddressLike,
    _weth: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdc, _weth, _router, overrides || {}) as Promise<
      DcaBatcher & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DcaBatcher__factory {
    return super.connect(runner) as DcaBatcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DcaBatcherInterface {
    return new Interface(_abi) as DcaBatcherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DcaBatcher {
    return new Contract(address, _abi, runner) as unknown as DcaBatcher;
  }
}
